#include <iostream>

using namespace  std;

///////////
// 多态
///////////

// 多态：用一致的接口处理不同数据类型的值
/*
分类：
1、重载多态：函数重载，符号重载
2、运行多态：基类指针（或引用），调用不同派生类的同名函数。编译时不知道联编到什么地方，运行的时候才会联编。
3、模板多态：即参数多态，通过一个模板得到不同的函数或不同的类。
*/

// 联编：主程序找对应的子程序的过程

// 在同名覆盖现象中，通过某个类的对象（对象指针、对象引用）调用同名函数，编译器会将该调用联编到该类的同名函数。
/*
虚函数 virtual：
1、目的：实现基类的对象指针（向量）可以调用派生类的同名函数
2、基类在定义同名函数前加上 virtual，基类的同名函数理论上是不用加的，但是为了可读性，通常是要加的
3、基类与派生类的同名函数，函数名、返回值、参数表必须全部相同。
4、静态成员函数 和 构造函数 不能声明为虚函数
5、析构函数可以定义为虚函数
*/

/*
纯虚函数与抽象类
作用：如果不能实现纯虚函数的派生类是无法实例化的。
virtual <返回值类型> 函数名(参数表)=0；	纯虚函数
凡是带有一个或多个纯虚函数的类，就是抽象类

*/





